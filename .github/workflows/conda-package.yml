name: Conda package

on: push

env:
  PACKAGE_NAME: numba-dppy
  MODULE_NAME: numba_dppy

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ["3.8"]
        integration_channels: [""]
        experimental: [true]  # packages are not available on -c intel yet
        artifact_name: [""]
        include:
          - python: "3.8"
            integration_channels: -c dppy/label/dev
            artifact_name: -c dppy_label_dev
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    env:
      CHANNELS: ${{ matrix.integration_channels }} -c intel -c defaults -c numba/label/dev --override-channels

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-

      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Build conda package
        run: |
          VERSIONS="--python ${{ matrix.python }}"
          TEST="--no-test"

          conda build \
            $TEST \
            $VERSIONS \
            $CHANNELS \
            conda-recipe
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }} ${{ matrix.artifact_name }}
          path: /usr/share/miniconda/conda-bld/linux-64/${{ env.PACKAGE_NAME }}-*.tar.bz2

  test:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ["3.8"]
        integration_channels: [""]
        experimental: [true]  # packages are not available on -c intel yet
        artifact_name: [""]
        dependencies: [""]
        include:
          - python: "3.8"
            integration_channels: -c dppy/label/dev
            artifact_name: -c dppy_label_dev
            experimental: true
            dependencies: ""
          - python: "3.8"
            integration_channels: -c dppy/label/dev
            artifact_name: -c dppy_label_dev
            experimental: false  # current stable
            dependencies: dpctl=0.9.0=*_21 dpnp=0.7.1=*_41 numba=0.54.0 llvmlite=0.37.0
    continue-on-error: ${{ matrix.experimental }}
    env:
      # conda-forge: llvm-spirv 11 not on intel channel yet
      CHANNELS: ${{ matrix.integration_channels }} -c intel -c defaults -c dppy/label/dev -c numba/label/dev -c conda-forge --override-channels

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }} ${{ matrix.artifact_name }}
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Create conda channel
        run: |
          mkdir -p $GITHUB_WORKSPACE/channel/linux-64
          mv ${PACKAGE_NAME}-*.tar.bz2 $GITHUB_WORKSPACE/channel/linux-64
          conda index $GITHUB_WORKSPACE/channel
          # Test channel
          conda search $PACKAGE_NAME -c $GITHUB_WORKSPACE/channel --override-channels

      - name: Collect dependencies
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda install $PACKAGE_NAME python=${{ matrix.python }} $CHANNELS --only-deps --dry-run > lockfile
      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-${{hashFiles('lockfile') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-

      - name: Install numba-dppy
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda install $PACKAGE_NAME pytest python=${{ matrix.python }} ${{ matrix.dependencies }} $CHANNELS
          # Test installed packages
          conda list
      - name: Run tests
        run: |
          # echo "libintelocl.so" | tee /etc/OpenCL/vendors/intel-cpu.icd
          export OCL_ICD_FILENAMES=libintelocl.so
          python -m pytest --pyargs $MODULE_NAME

  upload:
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8"]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          # `-c dppy_label_dev`: packages not published on `-c intel` yet
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }} -c dppy_label_dev

      - name: Install anaconda-client
        run: conda install anaconda-client
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH

      - name: Upload
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          conda install anaconda-client
          anaconda --token $ANACONDA_TOKEN upload --user dppy --label dev ${PACKAGE_NAME}-*.tar.bz2
