name: Generate documentation
on:
  push:
    branches:
      - release*
    tags:
      - '[0-9]+.[0-9]+*'

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    env:
      CHANNELS: -c intel -c defaults -c numba -c numba/label/dev -c dppy/label/dev -c conda-forge --override-channels

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-3.8-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-3.8-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-
      - name: Install cpu driver
        run: sudo apt-get install intel-opencl-icd
      - name: Activate cpu driver
        run: echo "libintelocl.so" | sudo tee /etc/OpenCL/vendors/intel-cpu.icd
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Build conda package
        run: |
          VERSIONS="--python 3.8"
          TEST="--no-test"
          conda build \
            $TEST \
            $VERSIONS \
            $CHANNELS \
            conda-recipe

      - name: Create conda channel
        run: |
          mkdir -p $GITHUB_WORKSPACE/channel/linux-64
          mv /usr/share/miniconda/conda-bld/linux-64/numba-dppy-*.tar.bz2 $GITHUB_WORKSPACE/channel/linux-64
          conda index $GITHUB_WORKSPACE/channel
          # Test channel
          conda search numba-dppy -c $GITHUB_WORKSPACE/channel --override-channels
      - name: Install numba-dppy
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda install numba-dppy python=3.8 $CHANNELS
          # Test installed packages
          conda list
      - name: Add library
        run: echo "OCL_ICD_FILENAMES=libintelocl.so" >> $GITHUB_ENV

      - name: Install documentation tools
        run: pip install sphinx autodoc recommonmark sphinx-rtd-theme sphinxcontrib-apidoc
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Capture branch and tag
        id: capture_tag
        run: |
          echo "${GITHUB_REF#refs/heads/}"
          echo "${GITHUB_REF#refs/tags/}"
          echo ::set-output name=tag_number::${GITHUB_REF#refs/tags/}
      - name: Build docs
        run: |
          make clean
          make html
        working-directory: ./docs

      - name: Deploy docs (Next release)
        if: startsWith(github.ref, 'refs/heads/release')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : next_release
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
      - name: Deploy docs (Tags)
        if: startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : ${{ steps.capture_tag.outputs.tag_number }}
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
