name: Generate documentation
on:
  push:
    branches:
      - main
      - release*
    tags:
      - '[0-9]+.[0-9]+*'

env:
  PACKAGE_NAME: numba-dppy
  python: 3.8
  artifact_name: -c dppy_label_dev
  dependencies: dpnp=0.7.1=*_41
  CHANNELS: -c dppy/label/dev -c defaults -c numba -c intel -c numba/label/dev -c conda-forge --override-channels

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ env.python }}-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ env.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Build conda package
        run: |
          VERSIONS="--python ${{ env.python }}"
          TEST="--no-test"
          conda build \
            $TEST \
            $VERSIONS \
            $CHANNELS \
            conda-recipe
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ env.python }} ${{ env.artifact_name }}
          path: /usr/share/miniconda/conda-bld/linux-64/${{ env.PACKAGE_NAME }}-*.tar.bz2

  generate-docs:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ env.python }} ${{ env.artifact_name }}
      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ env.python }}-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ env.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Create conda channel
        run: |
          mkdir -p $GITHUB_WORKSPACE/channel/linux-64
          mv ${PACKAGE_NAME}-*.tar.bz2 $GITHUB_WORKSPACE/channel/linux-64
          conda index $GITHUB_WORKSPACE/channel
          # Test channel
          conda search $PACKAGE_NAME -c $GITHUB_WORKSPACE/channel --override-channels
      - name: Install numba-dppy
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda install $PACKAGE_NAME python=${{ env.python }} ${{ env.dependencies }} $CHANNELS
          # Test installed packages
          conda list
      - name: Add library
        run: echo "OCL_ICD_FILENAMES=libintelocl.so" >> $GITHUB_ENV
      - name: Check version
        run: python -c "import numba_dppy; print(numba_dppy.__version__)"

      - name: Install documentation tools
        run: pip install sphinx autodoc recommonmark sphinx-rtd-theme sphinxcontrib-apidoc
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Capture branch and tag
        id: capture_tag
        run: |
          echo "${GITHUB_REF#refs/heads/}"
          echo "${GITHUB_REF#refs/tags/}"
          echo ::set-output name=tag_number::${GITHUB_REF#refs/tags/}
      - name: Build docs
        run: |
          make clean
          make html
        working-directory: ./docs

      - name: Deploy docs (Main)
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : dev
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
      - name: Deploy docs (Next release)
        if: startsWith(github.ref, 'refs/heads/release')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : next_release
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
      - name: Deploy docs (Tags)
        if: startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : ${{ steps.capture_tag.outputs.tag_number }}
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
