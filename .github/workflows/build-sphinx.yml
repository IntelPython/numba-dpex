name: Build Sphinx
on:
  push:
    branches:
      - main_dev
      - release*
    tags:
      - '[0-9].+**'

jobs:
  build-and-deploy:
    name: Build and Deploy Docs
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - name: Install Intel repository
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get update
      - name: Update libstdc++-dev
        run: |
          sudo apt remove -y gcc-7 g++-7 gcc-8 g++-8 gcc-10 g++-10
          sudo apt remove -y libstdc++-10-dev
          sudo apt autoremove
          sudo apt install --reinstall -y gcc-9 g++-9 libstdc++-9-dev
      - name: Install Intel OneAPI
        run: |
          sudo apt-get install intel-oneapi-mkl                \
                               intel-oneapi-mkl-devel          \
                               intel-oneapi-dpcpp-cpp-compiler \
                               intel-opencl-icd
      # https://github.com/marketplace/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-miniconda
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: numba-dppy
          python-version: 3.7
          auto-activate-base: false
      - name: Conda info
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Install numba-dppy dependencies
        shell: bash -l {0}
        run: |
          conda install numpy cython cmake conda-build llvmdev llvmlite recommonmark sphinx sphinx_rtd_theme wheel
          ./scripts/0.env.sh
          git clone https://github.com/IntelPython/numba.git
          cd numba
          python setup.py develop
          ../scripts/install_dpctl.sh
      - name: Capture branch and tag
        id: capture_tag
        run: |
          echo "${GITHUB_REF#refs/heads/}"
          echo "${GITHUB_REF#refs/tags/}"
          echo ::set-output name=tag_number::${GITHUB_REF#refs/tags/}
      - name: Build docs
        shell: bash -l {0}
        run: |
          . /opt/intel/oneapi/setvars.sh
          ./0.builddoc.sh
        working-directory: docs
      # https://github.com/marketplace/actions/github-pages-action
      - name: Deploy docs (Main)
        if: github.ref == 'refs/heads/main_dev'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : dev
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
      - name: Deploy docs (Next release)
        if: startsWith(github.ref, 'refs/heads/release')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : next_release
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}
      - name: Deploy docs (Tags)
        if: startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir : ${{ steps.capture_tag.outputs.tag_number }}
          publish_dir: docs/_build/html/
          allow_empty_commit : true
          commit_message: ${{ github.event.head_commit.message }}