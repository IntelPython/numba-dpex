

:orphan:

numba_dpex.core.utils.cgutils_extra
===================================

.. py:module:: numba_dpex.core.utils.cgutils_extra




Overview
--------
.. list-table:: Classes
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`LLVMTypes <numba_dpex.core.utils.cgutils_extra.LLVMTypes>`
     - A helper class to get LLVM Values for integer C types.


.. list-table:: Function
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`declare_function <numba_dpex.core.utils.cgutils_extra.declare_function>`\ (context, builder, name, sig, cargs, mangler)
     - Insert declaration for a opencl builtin function.
   * - :py:obj:`get_llvm_type <numba_dpex.core.utils.cgutils_extra.get_llvm_type>`\ (context, type)
     - Returns the LLVM Value corresponding to a Numba type.
   * - :py:obj:`get_llvm_ptr_type <numba_dpex.core.utils.cgutils_extra.get_llvm_ptr_type>`\ (type)
     - Returns an LLVM pointer type for a give LLVM type object.
   * - :py:obj:`create_null_ptr <numba_dpex.core.utils.cgutils_extra.create_null_ptr>`\ (builder, context)
     - Allocates a new LLVM Value storing a ``void*`` and returns the Value to
   * - :py:obj:`get_zero <numba_dpex.core.utils.cgutils_extra.get_zero>`\ (context)
     - Returns an LLVM Constant storing a 64 bit representation for zero.
   * - :py:obj:`get_one <numba_dpex.core.utils.cgutils_extra.get_one>`\ (context)
     - Returns an LLVM Constant storing a 64 bit representation for one.



Classes
-------

.. py:class:: LLVMTypes

   A helper class to get LLVM Values for integer C types.


   .. rubric:: Overview

   .. list-table:: Attributes
      :header-rows: 0
      :widths: auto
      :class: summarytable

      * - :py:obj:`byte_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.byte_t>`
        - \-
      * - :py:obj:`byte_ptr_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.byte_ptr_t>`
        - \-
      * - :py:obj:`byte_ptr_ptr_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.byte_ptr_ptr_t>`
        - \-
      * - :py:obj:`int32_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.int32_t>`
        - \-
      * - :py:obj:`int32_ptr_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.int32_ptr_t>`
        - \-
      * - :py:obj:`int64_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.int64_t>`
        - \-
      * - :py:obj:`int64_ptr_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.int64_ptr_t>`
        - \-
      * - :py:obj:`void_t <numba_dpex.core.utils.cgutils_extra.LLVMTypes.void_t>`
        - \-



   .. rubric:: Members

   .. py:attribute:: byte_t

      

   .. py:attribute:: byte_ptr_t

      

   .. py:attribute:: byte_ptr_ptr_t

      

   .. py:attribute:: int32_t

      

   .. py:attribute:: int32_ptr_t

      

   .. py:attribute:: int64_t

      

   .. py:attribute:: int64_ptr_t

      

   .. py:attribute:: void_t

      



Functions
---------
.. py:function:: declare_function(context, builder, name, sig, cargs, mangler=mangle_c)

   Insert declaration for a opencl builtin function.
   Uses the Itanium mangler.

   :param context:
   :type context: target context
   :param builder:
   :type builder: llvm builder
   :param name: symbol name
   :type name: str
   :param sig: function signature of the symbol being declared
   :type sig: signature
   :param cargs: C type names for the arguments
   :type cargs: sequence of str
   :param mangler: function to use to mangle the symbol
   :type mangler: a mangler function


.. py:function:: get_llvm_type(context, type)

   Returns the LLVM Value corresponding to a Numba type.

   :param context: The LLVM context or the execution state of the current IR
   :param generator.:
   :param type: A Numba type object.

   Returns: An Python object wrapping an LLVM Value corresponding to the
            specified Numba type.



.. py:function:: get_llvm_ptr_type(type)

   Returns an LLVM pointer type for a give LLVM type object.

   :param type: An LLVM type for which we need the corresponding pointer type.

   Returns: An LLVM pointer type object corresponding to the input LLVM type.



.. py:function:: create_null_ptr(builder, context)

   Allocates a new LLVM Value storing a ``void*`` and returns the Value to
   caller.

   :param builder: The LLVM IR builder to be used for code generation.
   :param context: The LLVM IR builder context.

   Returns: An LLVM value storing a null pointer



.. py:function:: get_zero(context)

   Returns an LLVM Constant storing a 64 bit representation for zero.

   :param context: The LLVM IR builder context.

   Returns: An LLVM Constant Value storing zero.



.. py:function:: get_one(context)

   Returns an LLVM Constant storing a 64 bit representation for one.

   :param context: The LLVM IR builder context.

   Returns: An LLVM Constant Value storing one.






