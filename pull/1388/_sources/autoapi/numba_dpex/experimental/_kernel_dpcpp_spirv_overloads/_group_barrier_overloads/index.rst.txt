
:orphan:

numba_dpex.experimental._kernel_dpcpp_spirv_overloads._group_barrier_overloads
==============================================================================

.. py:module:: numba_dpex.experimental._kernel_dpcpp_spirv_overloads._group_barrier_overloads

.. autoapi-nested-parse::

   Provides overloads for functions included in kernel_api.barrier that
   generate dpcpp SPIR-V LLVM IR intrinsic function calls.



Overview
--------


.. list-table:: Function
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`ol_group_barrier <numba_dpex.experimental._kernel_dpcpp_spirv_overloads._group_barrier_overloads.ol_group_barrier>`\ (group, fence_scope)
     - SPIR-V overload for




Functions
---------
.. py:function:: ol_group_barrier(group, fence_scope=MemoryScope.WORK_GROUP)

   SPIR-V overload for
   :meth:`numba_dpex.kernel_api.group_barrier`.

   Generates the same LLVM IR instruction as DPC++ for the SYCL
   `group_barrier` function.

   Per SYCL spec, group_barrier must perform both control barrier and memory
   fence operations. Hence, group_barrier requires two scopes and one memory
   consistency specification as its three arguments.

   mem_scope - scope of any memory consistency operations that are performed by
               the barrier. By default, mem_scope is set to `work_group`.
   exec_scope - scope that determines the set of work-items that synchronize at
                barrier. Set to `work_group` for group_barrier always.
   spirv_memory_semantics_mask - Based on SYCL implementation. Always set to
                                 use sequential consistency memory order.





