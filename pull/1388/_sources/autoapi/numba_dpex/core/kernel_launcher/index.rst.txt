
:orphan:

numba_dpex.core.kernel_launcher
===============================

.. py:module:: numba_dpex.core.kernel_launcher

.. autoapi-nested-parse::

   Provides a helper function to call a numba_dpex.kernel decorated function
   from either CPython or a numba_dpex.dpjit decorated function.



Overview
--------


.. list-table:: Function
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`call_kernel <numba_dpex.core.kernel_launcher.call_kernel>`\ (kernel_fn, index_space, \*kernel_args)
     - Compiles and synchronously executes a kernel function.
   * - :py:obj:`call_kernel_async <numba_dpex.core.kernel_launcher.call_kernel_async>`\ (kernel_fn, index_space, dependent_events, \*kernel_args)
     - Compiles and asynchronously executes a kernel function.




Functions
---------
.. py:function:: call_kernel(kernel_fn, index_space, *kernel_args) -> None

   Compiles and synchronously executes a kernel function.

   Kernel execution happens in synchronous way, so the main thread will be
   blocked till the kernel done execution.

   :param kernel_fn: A
                     :func:`numba_dpex.experimental.kernel` decorated function that is
                     compiled to a ``KernelDispatcher``.
   :type kernel_fn: numba_dpex.experimental.KernelDispatcher
   :param index_space: A Range or NdRange type object that
                       specifies the index space for the kernel.
   :type index_space: Range | NdRange
   :param kernel_args: List of objects that are passed to the numba_dpex.kernel
                       decorated function.


.. py:function:: call_kernel_async(kernel_fn, index_space, dependent_events: list[dpctl.SyclEvent], *kernel_args) -> tuple[dpctl.SyclEvent, dpctl.SyclEvent]

   Compiles and asynchronously executes a kernel function.

   Calls a :func:`numba_dpex.experimental.kernel` decorated function
   asynchronously from CPython or from a :func:`numba_dpex.dpjit` function. As
   the kernel execution happens asynchronously, so the main thread will not be
   blocked till the kernel done execution. Instead the function returns back to
   caller a handle for an *event* to track kernel execution. It is a user's
   responsibility to properly track kernel execution completion and not use any
   data that may still be used by the kernel prior to the kernel's completion.

   :param kernel_fn: A
                     :func:`numba_dpex.experimental.kernel` decorated function that is
                     compiled to a ``KernelDispatcher``.
   :type kernel_fn: KernelDispatcher
   :param index_space: A Range or NdRange type object that
                       specifies the index space for the kernel.
   :type index_space: Range | NdRange
   :param kernel_args: List of objects that are passed to the numba_dpex.kernel
                       decorated function.

   :returns: A pair of ``dpctl.SyclEvent`` objects. The pair of events constitute of
             a host task and an event associated with the kernel execution. The event
             associated with the kernel execution indicates the execution status of
             the submitted kernel function. The host task manages the lifetime of any
             PyObject passed in as a kernel argument and automatically decrements the
             reference count of the object on kernel execution completion.





