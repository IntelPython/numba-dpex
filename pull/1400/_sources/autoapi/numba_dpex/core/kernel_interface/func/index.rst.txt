
:orphan:

numba_dpex.core.kernel_interface.func
=====================================

.. py:module:: numba_dpex.core.kernel_interface.func


Overview
--------

.. list-table:: Classes
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`DpexFunction <numba_dpex.core.kernel_interface.func.DpexFunction>`
     - Class to materialize dpex function
   * - :py:obj:`DpexFunctionTemplate <numba_dpex.core.kernel_interface.func.DpexFunctionTemplate>`
     - Helper class to compile an unspecialized `numba_dpex.func`


.. list-table:: Function
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`compile_func <numba_dpex.core.kernel_interface.func.compile_func>`\ (pyfunc, signature, debug)
     - Compiles a specialized `numba_dpex.func`
   * - :py:obj:`compile_func_template <numba_dpex.core.kernel_interface.func.compile_func_template>`\ (pyfunc, debug, enable_cache)
     - Converts a `numba_dpex.func` function to an `AbstractTemplate`



Classes
-------

.. py:class:: DpexFunction(pyfunc, debug=False)

   Bases: :py:obj:`object`

   Class to materialize dpex function

   Helper class to eager compile a specialized `numba_dpex.func`
   decorated Python function into a LLVM function with `spir_func`
   calling convention.

   A specialized `numba_dpex.func` decorated Python function is one
   where the user has specified a signature or a list of signatures
   for the function. The function gets compiled as soon as the Python
   program is loaded, i.e., eagerly, instead of JIT compilation once
   the function is invoked.


   .. rubric:: Overview


   .. list-table:: Methods
      :header-rows: 0
      :widths: auto
      :class: summarytable

      * - :py:obj:`compile <numba_dpex.core.kernel_interface.func.DpexFunction.compile>`\ (arg_types, return_types)
        - The actual compilation function.


   .. rubric:: Members

   .. py:method:: compile(arg_types, return_types)

      The actual compilation function.

      :param arg_types: Function argument types in a tuple.
      :type arg_types: `tuple`
      :param return_types: An integer value to specify the return type.
      :type return_types: `numba.core.types.scalars.Integer`

      :returns: The compiled result
      :rtype: `numba.core.compiler.CompileResult`




.. py:class:: DpexFunctionTemplate(pyfunc, debug=False, enable_cache=True)

   Bases: :py:obj:`object`

   Helper class to compile an unspecialized `numba_dpex.func`

   A helper class to JIT compile an unspecialized `numba_dpex.func`
   decorated Python function into an LLVM function with `spir_func`
   calling convention.


   .. rubric:: Overview


   .. list-table:: Methods
      :header-rows: 0
      :widths: auto
      :class: summarytable

      * - :py:obj:`compile <numba_dpex.core.kernel_interface.func.DpexFunctionTemplate.compile>`\ (args)
        - Compile a `numba_dpex.func` decorated function


   .. rubric:: Members

   .. py:method:: compile(args)

      Compile a `numba_dpex.func` decorated function

      Compile a `numba_dpex.func` decorated Python function with the
      given argument types. Each signature is compiled once by caching
      the compiled function inside this object.

      :param args: Function argument types in a tuple.
      :type args: `tuple`

      :returns:

                Signature of the
                    compiled result.
      :rtype: `numba.core.typing.templates.Signature`




Functions
---------
.. py:function:: compile_func(pyfunc, signature, debug=False)

   Compiles a specialized `numba_dpex.func`

   Compiles a specialized `numba_dpex.func` decorated function to native binary
   library function and returns the library wrapped inside a
   `numba_dpex.core.kernel_interface.func.DpexFunction` object.

   :param pyfunc: A python function to be compiled.
   :type pyfunc: `function`
   :param signature: A list of `numba.core.typing.templates.Signature`'s
   :type signature: `list`
   :param debug: Debug options. Defaults to `False`.
   :type debug: `bool`, optional

   :returns:

             A `DpexFunction`
              object
   :rtype: `numba_dpex.core.kernel_interface.func.DpexFunction`


.. py:function:: compile_func_template(pyfunc, debug=False, enable_cache=True)

   Converts a `numba_dpex.func` function to an `AbstractTemplate`

   Converts a `numba_dpex.func` decorated function to a Numba
   `AbstractTemplate` and returns the object wrapped inside a
   `numba_dpex.core.kernel_interface.func.DpexFunctionTemplate`
   object.

   A `DpexFunctionTemplate` object is an abstract representation for
   a native function with `spir_func` calling convention that is to be
   JIT compiled once the argument types are resolved.

   :param pyfunc: A python function to be compiled.
   :type pyfunc: `function`
   :param debug: Debug options. Defaults to `False`.
   :type debug: `bool`, optional

   :raises AssertionError: Raised if keyword arguments are supplied in
       the inner generic function.

   :returns:     A `DpexFunctionTemplate` object.
   :rtype: `numba_dpex.core.kernel_interface.func.DpexFunctionTemplate`





