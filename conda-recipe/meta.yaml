{% set required_compiler_version = "2024.0" %}
{% set excluded_compiler_version1 = "2024.0.1" %}
{% set excluded_compiler_version2 = "2024.0.2" %}
{% set excluded_compiler_version3 = "2024.0.3" %}

package:
    name: numba-dpex
    version: {{ GIT_DESCRIBE_TAG }}

source:
    path: ..

build:
    number: {{ GIT_DESCRIBE_NUMBER }}
    script_env:
        - WHEELS_OUTPUT_FOLDER

requirements:
    # TODO: keep in sync with /pyproject.toml
    build:
        - {{ compiler('cxx') }}
        - {{ compiler('dpcpp') }} >={{ required_compiler_version }},!={{ excluded_compiler_version1 }},!={{ excluded_compiler_version2 }},!={{ excluded_compiler_version3 }}  # [win]
        - {{ compiler('dpcpp') }} >={{ required_compiler_version }},!={{ excluded_compiler_version1 }},!={{ excluded_compiler_version2 }}  # [linux]
        # specific version of sysroot required by dpcpp, but 2024.0.0 package
        # does not have it in meta data
        - sysroot_linux-64 >=2.28  # [linux]
    host:
        - dpcpp-cpp-rt >={{ required_compiler_version }},!={{ excluded_compiler_version1 }},!={{ excluded_compiler_version2 }},!={{ excluded_compiler_version3 }}  # [win]
        - dpcpp-cpp-rt >={{ required_compiler_version }},!={{ excluded_compiler_version1 }},!={{ excluded_compiler_version2 }}  # [linux]
        - python
        - setuptools >=69
        - scikit-build >=0.17
        - ninja >=1.11.1 # [not win]
        - cmake >=3.29
        - numba >=0.59
        - llvmlite >=0.42.0
        - dpctl >=0.16.1
        - dpnp >=0.14
        - numpy >=1.24
        # TODO: there is no 2024 release for python 3.11
        # - dpcpp-llvm-spirv >={{ required_compiler_version }}
        - dpcpp-llvm-spirv >=2023.0
        - wheel >=0.43
        - pip >=24.0
        - python-build >=1.1
        - versioneer==0.29
        # versioneer dependency
        - tomli # [py<311]
    run:
        - {{ pin_compatible('dpcpp-cpp-rt', min_pin='x.x', max_pin='x') }}
        - {{ pin_compatible('intel-cmplr-lib-rt', min_pin='x.x', max_pin='x') }}
        - {{ pin_compatible('dpcpp-llvm-spirv', min_pin='x.x', max_pin='x') }}
        - {{ pin_compatible('dpnp', min_pin='x.x.x', max_pin='x.x') }}
        - {{ pin_compatible('dpctl', min_pin='x.x.x', max_pin='x.x') }}
        - {{ pin_compatible('numba', min_pin='x.x.x', max_pin='x.x') }}
        - {{ pin_compatible('llvmlite', min_pin='x.x.x', max_pin='x.x') }}
        # TODO: set max pin +2 from minor version
        # https://numpy.org/neps/nep-0023-backwards-compatibility.html#nep23
        - {{ pin_compatible('numpy', min_pin='x.x.x', max_pin='x') }}
        - python

test:
    requires:
        - pytest
        - pytest-cov
        - pexpect

about:
    home: https://github.com/IntelPython/numba-dpex
    summary: "Numba extension for Intel CPU and GPU backend"
    license: Apache-2.0
    license_file: LICENSE
    description: |
        <strong>LEGAL NOTICE: Use of this software package is subject to the
        software license agreement (as set forth above, in the license section of
        the installed Conda package and/or the README file) and all notices,
        disclaimers or license terms for third party or open source software
        included in or with the software.</strong>
        <br/><br/>
        EULA: <a href="https://opensource.org/licenses/Apache-2.0" target="_blank">Apache-2.0</a>
        <br/><br/>

extra:
    recipe-maintainers:
        - Intel Python
