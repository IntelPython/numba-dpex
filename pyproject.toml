[build-system]
build-backend = "setuptools.build_meta"
requires = [
  # TODO: keep in sync with [project.dependencies]
  "wheel>=0.43",
  "build>=1.1",
  "setuptools>=63.0.0",
  "scikit-build>=0.17.0",
  "ninja>=1.11.1; platform_system!='Windows'",
  "cmake>=3.29.0",
  # We need dpctl for UsmNdArray integration for dpcpp code
  "dpctl>=0.16.1",
  # We need numba for runtime cpp headers
  "numba>=0.59.0,<0.60.0a0",
  "llvmlite>=0.42.0",
  # Do we need dpnp at build time?
  "dpnp >=0.14",
  "numpy >=1.24",
  # WARNING: check with doc how to upgrade
  "versioneer[toml]==0.29"
]

[project]
authors = [{name = "Intel Corporation"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU",
  "Environment :: Plugins",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Compilers",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux"
]
dependencies = [
  # TODO: keep in sync with [build-system.requires] and /conda-recipe/meta.yaml
  # This restrictions are for dependabot, actual restrictions are set with
  # conda. TODO: populate it during build process
  # TODO: do we have to set sycl runtime dependencies here
  # "dpcpp-cpp-rt>=0.59.0",
  # "intel-cmplr-lib-rt>=0.59.0"
  "numba>=0.59.0",
  "llvmlite>=0.42.0",
  "dpctl>=0.16.1",
  "dpnp>=0.14.0",
  "numpy>=1.24.0",
  "dpcpp_llvm_spirv>=2024.1"
]
description = "An extension for Numba to add data-parallel offload capability"
dynamic = ["version"]
keywords = [
  "sycl",
  "python3",
  "numba",
  "numpy",
  "intel",
  "mkl",
  "oneapi",
  "gpu",
  "dpcpp"
]
license = {text = "Apache 2.0"}
name = "numba-dpex"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"

[project.urls]
Changelog = "https://github.com/IntelPython/numba-dpex/blob/main/CHANGELOG.md"
Documentation = "https://intelpython.github.io/numba-dpex/"
Homepage = "https://github.com/IntelPython/numba-dpex"
Issues = "https://github.com/IntelPython/numba-dpex/issues"
Repository = "https://github.com/IntelPython/numba-dpex.git"

[tool.black]
exclude = "numba_dpex/_version.py"
line-length = 80

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "if config.DEBUG:",
  "@register_jitable",
  "def dpnp_impl"
]
omit = [
  "numba_dpex/tests/*",
  "numba_dpex/_version.py"
]
precision = 2

[tool.coverage.run]
branch = true
concurrency = [
  "multiprocessing"
]
omit = [
  "numba_dpex/tests/*",
  "numba_dpex/_version.py"
]
parallel = true
source = [
  "numba_dpex"
]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 80
multi_line_output = 3
skip = ["numba_dpex/_version.py"]
use_parentheses = true

[tool.pylint]
disable = [
  "fixme"
]

[tool.pytest.ini_options]
addopts = [
  "--disable-warnings",
  "--strict",
  "--durations=20",
  "-ra -vv"
]
minversion = "6.0"
norecursedirs = [
  ".*",
  "*.egg*",
  "build",
  "dist",
  "conda-recipe"
]
testpaths = [
  "numba_dpex/tests"
]
xfail_strict = true

[tool.versioneer]
VCS = "git"
parentdir_prefix = ""
style = "pep440"
versionfile_build = "numba_dpex/_version.py"
versionfile_source = "numba_dpex/_version.py"
